@model List<Deposit>
@{
    ViewData["Title"] = "OrderBook";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.1/Chart.min.js"></script>
<div class="orderbook">
    <div class="col col-md-3">
        <div id="Sell" class="half-page" style="background:#111; overflow-y:scroll;">

        </div>
        <div id="Buy" class="half-page" style="background:yellow; padding-left: 10px; overflow-y: scroll;">
            <table id="depositId">
                <thead>
                    <tr>
                        <th>Price</th>
                        <th>Time</th>
                    </tr>
                </thead>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>@item.DepositAmount</td>
                        <td>@item.DepositDate</td>
                    </tr>  
                }
            </table>
        </div>
    </div>
    <div class="col col-md-9">
        <div class="half-page">
            <canvas id="myChart"></canvas>
        </div>
        <div class="half-page" style="background:purple;">

        </div>
    </div>
</div>


<script>
    //Recieve data from server
    //connection.on('Buy', function (message, orderPrice) {
    //    alert(message);
    //    document.getElementById('Buy').innerHTML += orderPrice;
    //})


    connection.on('NewOrder', function (depositHistoryTable) {
        //depositHistoryTable.sort();
        var parent = document.getElementById("depositId");
        parent.innerHTML = "";
        for (var i = 0; i < depositHistoryTable.length; i++) {
            var child = document.createElement("li");
            child.innerHTML = depositHistoryTable[i].depositAmount;
            parent.appendChild(child);
        }
    })

    //Chart area.....................................................................

    var ctx = document.getElementById("myChart").getContext('2d');
    var myChart = new Chart(ctx, {
        type: 'line',
        data: {
            labels: ["Red", "Blue", "Yellow", "Green", "Purple", "Orange"],
            datasets: [{
                label: '# of Votes',
                data: [12, 19, 3, 5, 2, 3],
                backgroundColor: [
                    'rgba(255, 99, 132, 0.2)',
                    'rgba(54, 162, 235, 0.2)',
                    'rgba(255, 206, 86, 0.2)',
                    'rgba(75, 192, 192, 0.2)',
                    'rgba(153, 102, 255, 0.2)',
                    'rgba(255, 159, 64, 0.2)'
                ],
                borderColor: [
                    'rgba(255,99,132,1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)',
                    'rgba(153, 102, 255, 1)',
                    'rgba(255, 159, 64, 1)'
                ],
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                yAxes: [{
                    ticks: {
                        beginAtZero: true
                    }
                }]
            }
        }
    });
    var i = myChart.data.datasets.length;
    setInterval(function () {
        myChart.data.datasets[0].data[i] = Math.floor(Math.random()*10);
        myChart.data.labels[i] = "test";
        myChart.update();
        i++;
    }, 1000);

</script>