@model IOrderedEnumerable<Deposit>
@{
    ViewData["Title"] = "OrderBook";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.1/Chart.min.js"></script>
<div class="orderbook">
    <div class="col col-md-3">
        <div id="Buy" class="full-screen" style="background:#111; border:1px solid black; color:#d46d15; overflow-y: scroll;">
            <table id="depositId" style="margin-left:10px;">
                <thead>
                    <tr>
                        <th>Price</th>
                        <th>Time</th>
                    </tr>
                </thead>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>@item.DepositAmount</td>
                        <td>@item.DepositDate</td>
                    </tr>  
                }
            </table>
        </div>
    </div>
    <div class="col col-md-9">
        <div class="half-page" style="background:#111; border-bottom:1px solid black">
            <canvas id="myChart"></canvas>
        </div>
        <div class="half-page" style="background:#111;">
            <canvas id="secondChart"></canvas>
        </div>
    </div>
</div>


<script>
    //Recieve data from server
    //connection.on('Buy', function (message, orderPrice) {
    //    alert(message);
    //    document.getElementById('Buy').innerHTML += orderPrice;
    //})


    connection.on('NewOrder', function (depositHistoryTable) {
        //depositHistoryTable.sort();
        var parent = document.getElementById("depositId");
        parent.innerHTML = "";
        for (var i = 0; i < depositHistoryTable.length; i++) {
            var child = document.createElement("li");
            child.innerHTML = depositHistoryTable[i].depositAmount;
            parent.appendChild(child);
        }
    })

    //Chart area.....................................................................
    function generateDataFromTable() {
        var labels = [];

        var rows = jQuery("tr");
        rows.each(function (index) {
            if (index != 0)  // we dont need first row of table
            {
                var cols = $(this).find("td");
                var num = parseInt(cols.first().text());
                labels.push(num);
            }
        });

        return labels.reverse();
    }

    function generateColorsFromTable() {
        var colors = [];

        var rows = jQuery("tr");
        rows.each(function (index) {
            if (index != 0)  // we dont need first row of table
            {
                colors.push('rgba(212,109,21,1)');
            }
        });

        return colors;
    }

    function generateLabelsFromTable() {
        var labels = [];

        var rows = jQuery("tr");
        rows.each(function (index) {
            if (index != 0)  // we dont need first row of table
            {
                var cols = $(this).find("td");
                var lab = cols.last().text();
                labels.push(lab);
            }
        });

        var unique = $.uniqueSort(labels);
        unique.reverse();
        return unique;
    }


    var ctx = document.getElementById("myChart").getContext('2d');
    var myChart = new Chart(ctx, {
        type: 'line',
        data: {
            labels: generateLabelsFromTable(),
            datasets: [{
                label: 'Deposit history',
                data: generateDataFromTable(),
                borderWidth: 2,
                backgroundColor: ['rgba(212,109,21, 0.7)'],
                borderColor: ['rgba(212,109,21,1)'],
            }]
        },
        options: {
            legend: {
                labels: {
                    fontColor: "rgba(212,109,21, 1)",
                    fontSize: 18
                }
            },
            scales: {
                yAxes: [{
                    ticks: {
                        fontColor: "rgba(212,109,21, 1)",
                        fontSize: 18,
                        ticks: {
                            beginAtZero: true
                        }
                    }
                }],
                xAxes: [{
                    ticks: {
                        fontColor: "rgba(212,109,21, 1)",
                        fontSize: 14,
                        stepSize: 1,
                        time: {
                            unit: 'day'
                        }
                    }
                }]
            }
        }
    });


    var ctxx = document.getElementById("secondChart").getContext('2d');
    var stackedBar = new Chart(ctxx, {
        type: 'bar',
        data: {
            labels: generateLabelsFromTable(),
            datasets: [{
                label: 'Coin quantity',
                data: generateDataFromTable(),
                borderWidth: 2,
                backgroundColor: generateColorsFromTable(),
            }]
        },
        options: {
            legend: {
                labels: {
                    fontColor: "rgba(212,109,21, 1)",
                    fontSize: 18
                }
            },

            scales: {
                yAxes: [{
                    ticks: {
                        fontColor: "rgba(212,109,21, 1)",
                        fontSize: 18,
                        stacked: true
                    }
                }],
                xAxes: [{
                    ticks: {
                        fontColor: "rgba(212,109,21, 1)",
                        fontSize: 14,
                        stepSize: 1,
                        stacked: true
                    }
                }]
            }
        }
    });

</script>