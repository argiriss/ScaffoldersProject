<!--Depedency injection of service into view-->
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - ScaffoldersProject</title>
    <environment include="Development">
        <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.css" />
        <link rel="stylesheet" href="~/css/site.css" />
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
        <script src="~/lib/jquery/dist/jquery.min.js"></script>
        <!--SignalR client-->
        <script src="~/signalr-client-1.0.0-alpha2-final.min.js"></script>
    </environment>
    <environment exclude="Development">
        <link rel="stylesheet" href="https://ajax.aspnetcdn.com/ajax/bootstrap/3.3.7/css/bootstrap.min.css"
              asp-fallback-href="/lib/bootstrap/dist/css/bootstrap.min.css"
              asp-fallback-test-class="sr-only" asp-fallback-test-property="position" asp-fallback-test-value="absolute" />
        <link rel="stylesheet" href="~/css/site.css" />
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
        <script src="~/lib/jquery/dist/jquery.min.js"></script>
        <!--SignalR client-->
        <script src="~/signalr-client-1.0.0-alpha2-final.min.js"></script>
    </environment>
    <style>
        body {
            font-family: "Lato", sans-serif;
        }

        .sidenav a, .dropdown-btn {
            padding: 6px 8px 6px 16px;
            text-decoration: none;
            font-size: 20px;
            color: #818181;
            display: block;
            border: none;
            background: none;
            width: 100%;
            text-align: left;
            cursor: pointer;
            outline: none;
        }

            .sidenav a:visited {
                color: #818181;
            }

            /* On mouse-over */
            .sidenav a:hover, .dropdown-btn:hover {
                color: #d46d15;
            }

            /* selected link */
            .sidenav a:active {
                color: #d46d15;
            }

        .row.button-row {
            margin: 15px;
        }

            .row.button-row button {
                width: 100%;
                padding: 5px;
                border: 2px solid transparent;
                border-right: 1px solid #111;
            }

        .nav-tabs > li.active > a, .nav-tabs > li.active > a:hover, .nav-tabs > li.active > a:focus {
            color: #555;
            cursor: default;
            background-color: transparent;
            border: none;
            border-bottom-color: transparent;
        }

        .dropdown-container {
            display: none;
            background-color: #262626;
            padding-left: 8px;
        }

        /* Optional: Style the caret down icon */
    </style>

    <script>
        var connection = new signalR.HubConnection('/main');
    </script>
</head>

<body>
    @await Html.PartialAsync("_LoginPartial")
    <div class="container-fluid">
        @if (SignInManager.IsSignedIn(User))
        {
            if (User.IsInRole("Client"))
            {
                <div class="row">
                    <div class="col-md-2 sidenav-col">
                        <div class="sidenav">
                            <div class="row">
                                <div class="dropdown">
                                    @*startof dropdown*@
                                    <button id="dropdown-button" class="btn btn-primary dropdown-toggle" type="button" data-toggle="dropdown">
                                        <span id="dropdown-button-text">Select Product </span>
                                        <span id="dropdown-button-coin" style="padding-left:5px"></span>
                                        <i class="fa fa-caret-down"></i>
                                    </button>
                                    <ul id="dropMenuId" class="dropdown-menu"></ul>
                                </div> @*end of dropdown*@
                            </div>
                            <a asp-area="" asp-controller="Manage" asp-action="Index" title="Manage">Hello @UserManager.GetUserName(User)!</a>
                            <button class="dropdown-btn">Client Menu<i class="fa fa-caret-down"></i></button>
                            <div class="dropdown-container">
                                <a asp-controller="Client" asp-action="Index">View Products</a>
                                <a asp-area="" asp-controller="Client" asp-action="DepositHistory">Deposit History</a>
                                <a asp-controller="Order" asp-action="BuyHistory">Buy History</a>
                            </div>
                            <a asp-area="" asp-controller="Client" asp-action="OrderBook">Order Book</a>

                            <div class="row" style="background-color:orangered">
                                @*<div class="col-md-12" style="position:absolute;width: 100%;left: 0;right:0;background-color:orangered;">*@
                                <div class="col-md-12" style="background-color:orangered; padding-left:30px;">
                                    <div class="row">
                                        <div class="input-group">
                                            <span><label style="color:white;margin-bottom:1px;margin-top:5px;font-size:20px">Wallet</label>                                            </span>
                                            <div class="input-group-addon text-right" style="background-color:transparent;border:none">
                                                <button class="btn btn-primary" onclick="window.location.href='@Url.Action("Deposit","Client")'">Deposit</button>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row" style="font-size:20px">
                                        <div id="walletId" class="text-center"><div id="loader" class="lds-ellipsis"><div></div><div></div><div></div><div></div></div></div>
                                    </div>
                                    <div class="row"><h3 style="color:white;margin-bottom:1px;margin-top:2px">Balance</h3></div>
                                    <div class="row" style="font-size:18px">
                                        <div class="input-group">
                                            <span class="input-group-addon" style="color:#333;background-color:transparent;border:none;font-size:16px;height:18px">Euro</span>
                                            <div id="balanceClientId" class="form-control text-right" style="color:#333;background-color:transparent;border:none;box-shadow:none;font-size:14px;height:18px"><div id="loader" class="lds-ellipsis" style="margin-right:25%"><div></div><div></div><div></div><div></div></div></div>
                                        </div>
                                    </div>
                                    <div class="row" style="font-size:18px">
                                        <div class="input-group">
                                            <span id="coinLabelId" class="input-group-addon" style="color:#333;background-color:transparent;border:none;font-size:14px;height:18px;padding-bottom:12px">.........</span>
                                            <div id="totalCoinId" class="form-control text-right" style="color:#333;background-color:transparent;border:none;box-shadow:none;font-size:14px;height:18px;padding-bottom:12px"><div id="loader" class="lds-ellipsis" style="margin-right:25%"><div></div><div></div><div></div><div></div></div></div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <ul class="nav nav-tabs">
                                    <li class="active"><a data-toggle="tab" href="#BuySell">Buy/Sell</a></li>
                                    <li><a data-toggle="tab" href="#AskBid">Bid/Ask</a></li>
                                </ul>
                            </div>
                            <div class="tab-content">
                                @*Buy/Sell*@
                                <div id="BuySell" class="tab-pane fade in active">
                                    <div class="row button-row">
                                        <div class="col col-xs-3 col-sm-6">
                                            <button class="buy-button btn-success" onclick="setBuy()">Buy</button>
                                        </div>
                                        <div class="col col-xs-3 col-sm-6">
                                            <button class="sell-button btn-danger" onclick="setSell()">Sell</button>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="input-group">
                                            @*Enter Euro Amount*@
                                            <input id="enterAmmountId" onchange="ConvertToSelectedCoin(this)" onkeyup="ConvertToSelectedCoin(this)" type="number" class="form-control" style="background-color:transparent" placeholder="Enter Amount">
                                            <span id="enterAmmountIdCoin" class="input-group-addon" style="background-color:transparent;padding-bottom:8px">EUR</span>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="input-group">
                                            <label type="text" class="form-control" style="background-color:transparent;border:none">Total:</label>
                                            <span id="totalCoinSelectedId" class="input-group-addon" style="background-color:transparent;border:none"></span>
                                            <span id="selectedCoinId" class="input-group-addon" style="background-color:transparent;border:none"></span>
                                        </div>
                                    </div>
                                    <div class="row text-center">
                                        <button id="placeOrderId" class="btn btn-success" onclick="placeBuyOrder()">Place Buy Order</button>
                                    </div>
                                </div>@*End of Buy/Ask*@

                                @*Ask/Bid*@
                                <div id="AskBid" class="tab-pane fade">
                                    <div class="row button-row">
                                        <div class="col col-xs-3 col-sm-6">
                                            <button class="buy-button btn-success" onclick="setBid()">Bid</button>
                                        </div>
                                        <div class="col col-xs-3 col-sm-6">
                                            <button class="sell-button btn-danger" onclick="setAsk()">Ask</button>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="input-group">
                                            @*Enter Coin Amount*@
                                            <input id="enterAmmountAskOfferId" type="number" class="form-control" style="background-color:transparent;" placeholder="Enter Amount">
                                            <span id="AskOfferCoinId" class="input-group-addon" style="background-color:transparent"></span>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="input-group">
                                            @*Enter Limit price Amount*@
                                            <input id="enterLimitPriceId" type="number" class="form-control" style="background-color:transparent" placeholder="Enter Limit Price">
                                            <span id="AskOfferEuroId" class="input-group-addon" style="background-color:transparent">EUR</span>
                                        </div>
                                    </div>
                                    <div class="row text-center">
                                        <button id="placeAskBidId" class="btn btn-success" onclick="placeAskBidOrder()" style="margin-top:5px">Place Bid</button>
                                    </div>

                                </div>
                            </div>
                        </div>@*End of SideNav*@
                    </div>
                    <div class="col-md-10 col-md-offset-2">
                        @RenderBody()
                    </div>
                </div>
            }
            else if (User.IsInRole("Admin"))
            {
                <div class="row">
                    <div class="col-md-2 sidenav-col">
                        <div class="sidenav">
                            <a asp-area="" asp-controller="Manage" asp-action="Index" title="Manage">Hello @UserManager.GetUserName(User)!</a>
                            <a asp-area="" asp-controller="Admin" asp-action="Index">View Products</a>
                            <a asp-area="" asp-controller="Admin" asp-action="NewProducts">Verify Products</a>
                            <a asp-area="" asp-controller="Admin" asp-action="Users">Manage Users</a>
                            <a asp-area="" asp-controller="Admin" asp-action="Users">History Book</a>
                            <a asp-area="" asp-controller="Admin" asp-action="OrderBook">Order Book</a>
                            <a asp-area="" asp-controller="Admin" asp-action="SetFee">Set Fees</a>

                            <div class="row" style="background-color:orangered">
                                @*<div class="col-md-12" style="position:absolute;width: 100%;left: 0;right:0;background-color:orangered;">*@
                                <div class="col-md-12" style="background-color:orangered; padding-left:30px;">
                                    <div><h3 style="color:white">Wallet</h3></div>
                                    <div class="row" style="font-size:20px">
                                        <div id="walletId" class="col-md-12 text-center"><div id="loader" class="lds-ellipsis"><div></div><div></div><div></div><div></div></div></div>
                                    </div>
                                </div>
                            </div>

                            <div class="row search">
                                <form asp-action="Search" asp-controller="Account">
                                    <div class="form-group has-feedback">
                                        <label for="search" class="sr-only">Search</label>
                                        <input type="text" class="form-control" name="search" placeholder="Search">
                                        <span class="glyphicon glyphicon-search form-control-feedback"></span>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-10 col-md-offset-2 full-screen">
                        @RenderBody()
                    </div>
                </div>
            }
            else
            {
                <div class="row">
                    <div class="col-md-2 sidenav-col">
                        <div class="sidenav">
                            <a asp-area="" asp-controller="Manage" asp-action="Index" title="Manage">Hello @UserManager.GetUserName(User)!</a>
                            <a href="/Client/Index">View Products</a>
                            <a asp-area="" asp-controller="member" asp-action="Create">Create Product</a>
                            <a >Buy History</a>

                            <div class="row" style="background-color:orangered">
                                @*<div class="col-md-12" style="position:absolute;width: 100%;left: 0;right:0;background-color:orangered;">*@
                                <div class="col-md-12" style="background-color:orangered; padding-left:30px;">
                                    <div><h3 style="color:white">Wallet</h3></div>
                                    <div class="row" style="font-size:20px">
                                        <div id="walletId" class="col-md-12 text-center"><div id="loader" class="lds-ellipsis"><div></div><div></div><div></div><div></div></div></div>
                                    </div>
                                </div>
                            </div>

                            <div class="row search">
                                <form asp-action="Search" asp-controller="Account">
                                    <div class="form-group has-feedback">
                                        <label for="search" class="sr-only">Search</label>
                                        <input type="text" class="form-control" name="search" placeholder="Search">
                                        <span class="glyphicon glyphicon-search form-control-feedback"></span>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-10 col-sm-offset-2 full-screen">
                        @RenderBody()
                    </div>
                </div>
            }
        }
        else
        {
            <div class="row">
                @RenderBody()
            </div>
        }
    </div>


    <environment include="Development">
        <script src="~/lib/jquery/dist/jquery.js"></script>
        <script src="~/lib/bootstrap/dist/js/bootstrap.js"></script>
        <script src="~/js/site.js" asp-append-version="true"></script>
    </environment>
    <environment exclude="Development">
        <script src="https://ajax.aspnetcdn.com/ajax/jquery/jquery-2.2.0.min.js"
                asp-fallback-src="/lib/jquery/dist/jquery.min.js"
                asp-fallback-test="window.jQuery"
                crossorigin="anonymous"
                integrity="sha384-K+ctZQ+LL8q6tP7I94W+qzQsfRV2a+AfHIi9k8z8l9ggpc8X+Ytst4yBo/hH+8Fk">
        </script>
        <script src="https://ajax.aspnetcdn.com/ajax/bootstrap/3.3.7/bootstrap.min.js"
                asp-fallback-src="/lib/bootstrap/dist/js/bootstrap.min.js"
                asp-fallback-test="window.jQuery && window.jQuery.fn && window.jQuery.fn.modal"
                crossorigin="anonymous"
                integrity="sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa">
        </script>
        <script src="/js/site.js" asp-append-version="true"></script>
        <script src="/js/vidbg.min.js" asp-append-version="true"></script>
    </environment>
    @RenderSection("Scripts", required: false)

    <script>
        var currentCoinPrice;//from function setProductId()
        var currentProductId;//from function setProductId()
        var currentCoinShortName;//from function setProductId()

        //Receive from server on refresh
        connection.on('Wallet', function (walletTotal, getAllApprovedProducts) {
            document.getElementById("loader").style.display = "none";
            document.getElementById('walletId').innerHTML = walletTotal;
            dropClientsItems(getAllApprovedProducts);
        })

        connection.on('ResetWallet', function (newWallet) {
            document.getElementById("loader").style.display = "none";
            document.getElementById('walletId').innerHTML = walletTotal;
         })

        //Receive from server From Buy or Sell Sidenav changes
        connection.on('InstantBuySell', function (walletTotal, totalFromThisProduct,totalInEuro) {
            document.getElementById('walletId').innerHTML = walletTotal;
            document.getElementById('balanceClientId').innerHTML = totalInEuro.toFixed(2);
            document.getElementById('totalCoinId').innerHTML = totalFromThisProduct.toFixed(4);
        })
        //all except the user who made the action
        connection.on('SendAll', function (bidTable, askTable, currentPrice, tradeHistory,productId) {
            if (currentProductId ==productId) {   
                allUsers(bidTable, askTable, currentPrice, tradeHistory);
            }
        });

        connection.on('ParallerActions', function (bidTable, askTable, currentPrice, tradeHistory,userId) {
            parallerActions(bidTable, askTable, currentPrice, tradeHistory,userId);
        })

        //Receive from server ,notification for the login user about his amount
        //in selected product
        connection.on('SelectedCoin', function (getAllApprovedProducts,totalFromThisProduct, totalInEuro) {
            document.getElementById('totalCoinId').innerHTML = totalFromThisProduct.toFixed(4);
            document.getElementById('balanceClientId').innerHTML = totalInEuro.toFixed(2);
            dropClientsItems(getAllApprovedProducts);
        });

        connection.on('Errors', function (message) {
            alert(message);
        });

        //Methods........................
        function parallerActions(offerTable, askTable, currentPrice, tradeHistory,userId) {
            currentCoinPrice = currentPrice;
            document.getElementById('dropdown-button-coin').innerHTML = currentCoinPrice.toFixed(2);
            var currentUrl = window.location.href;
            if (currentUrl.includes('OrderBook')) {
                //orderbook
                var parent = document.getElementById("tbodybid");
                var trElem;
                var tdElem;
                var tdSecElem;
                parent.innerHTML = "";
                for (var i = 0; i < offerTable.length; i++) {
                    trElem = document.createElement("tr");
                    tdElem = document.createElement("td");
                    tdElem.innerHTML = offerTable[i].quantity.toFixed(4);
                    tdSecElem = document.createElement("td");
                    tdSecElem.innerHTML = offerTable[i].priceOffer.toFixed(2);
                    trElem.appendChild(tdElem);
                    trElem.appendChild(tdSecElem);
                    parent.appendChild(trElem);
                }
                //ask table
                parent = document.getElementById("tbody");
                parent.innerHTML = "";
                for (var i = 0; i < askTable.length; i++) {
                    trElem = document.createElement("tr");
                    tdElem = document.createElement("td");
                    tdElem.innerHTML = askTable[i].quantity.toFixed(4);
                    tdSecElem= document.createElement("td");
                    tdSecElem.innerHTML = askTable[i].priceAsk.toFixed(2);
                    tdThirdElem = document.createElement("td");
                    if (askTable[i].userAskId === userId) {                      
                        tdThirdElem.innerHTML = askTable[i].quantity.toFixed(2);
                    }
                    trElem.appendChild(tdElem);
                    trElem.appendChild(tdSecElem);
                    trElem.appendChild(tdThirdElem);
                    parent.appendChild(trElem);
                    $("#tbody").scrollTop($("#tbody")[0].scrollHeight);
                }
                //tradehistory
                var hoursSet;
                var minSet;
                var secSet;
                var labels = [];
                var data = [];
                var quantity = [];
                var colors = [];
                $('#selectprompt').hide();
                parent = document.getElementById("tradeHistory");
                parent.innerHTML = "";
                for (var i = 0; i < tradeHistory.length; i++) {
                    var timeSet = new Date(tradeHistory[i].dateofTransaction)
                    hoursSet = timeSet.getHours();
                    minSet = timeSet.getMinutes();
                    secSet = timeSet.getSeconds();
                    var times = hoursSet + ":" + minSet + ":" + secSet;
                    labels.push(times);
                    colors.push('rgba(212,109,21, 0.7)');
                    data.push(tradeHistory[i].price.toFixed(2));
                    quantity.push(tradeHistory[i].quantity.toFixed(2));
                    trElem = document.createElement("tr");
                    trElem.className = "trade-row";
                    if (tradeHistory[i].status === 'Sell') {
                        trElem.style.color = "red";
                    }
                    else {
                        trElem.style.color = "green";
                    }
                    tdElem = document.createElement("td");
                    tdElem.innerHTML = tradeHistory[i].quantity;
                    tdSecElem = document.createElement("td");
                    tdSecElem.innerHTML = tradeHistory[i].price;
                    tdThirdElem = document.createElement("td");
                    var timeSet = new Date(tradeHistory[i].dateofTransaction)
                    hoursSet = timeSet.getHours();
                    minSet = timeSet.getMinutes();
                    secSet = timeSet.getSeconds();
                    tdThirdElem.innerHTML = hoursSet + ':' + minSet + ':' + secSet;
                    trElem.appendChild(tdElem);
                    trElem.appendChild(tdSecElem);
                    trElem.appendChild(tdThirdElem);
                    parent.appendChild(trElem);
                }
                //Chart area
                getChartLine(labels,data);
                getChartBar(labels, colors, quantity);
            }
        }

        function allUsers(offerTable, askTable, currentPrice, tradeHistory) {
            currentCoinPrice = currentPrice;
            document.getElementById('dropdown-button-coin').innerHTML = currentCoinPrice.toFixed(2);
            var currentUrl = window.location.href;
            if (currentUrl.includes('OrderBook')) {
                //orderbook
                var parent = document.getElementById("tbodybid");
                var trElem;
                var tdElem;
                var tdSecElem;
                parent.innerHTML = "";
                for (var i = 0; i < offerTable.length; i++) {
                    trElem = document.createElement("tr");
                    tdElem = document.createElement("td");
                    tdElem.innerHTML = offerTable[i].quantity.toFixed(4);
                    tdSecElem = document.createElement("td");
                    tdSecElem.innerHTML = offerTable[i].priceOffer.toFixed(2);
                    trElem.appendChild(tdElem);
                    trElem.appendChild(tdSecElem);
                    parent.appendChild(trElem);
                }
                //ask table
                parent = document.getElementById("tbody");
                parent.innerHTML = "";
                for (var i = 0; i < askTable.length; i++) {
                    trElem = document.createElement("tr");
                    tdElem = document.createElement("td");
                    tdElem.innerHTML = askTable[i].quantity.toFixed(4);
                    tdSecElem = document.createElement("td");
                    tdSecElem.innerHTML = askTable[i].priceAsk.toFixed(2);
                    tdThirdElem = document.createElement("td");
                    if (askTable[i].userAskId === '@UserManager.GetUserId(User)') {
                        tdThirdElem.innerHTML = askTable[i].quantity.toFixed(2);
                    }
                    trElem.appendChild(tdElem);
                    trElem.appendChild(tdSecElem);
                    trElem.appendChild(tdThirdElem);
                    parent.appendChild(trElem);
                    $("#tbody").scrollTop($("#tbody")[0].scrollHeight);
                }
                //tradehistory
                var hoursSet;
                var minSet;
                var secSet;
                var labels = [];
                var data = [];
                var quantity = [];
                var colors = [];
                $('#selectprompt').hide();
                parent = document.getElementById("tradeHistory");
                parent.innerHTML = "";
                for (var i = 0; i < tradeHistory.length; i++) {
                    var timeSet = new Date(tradeHistory[i].dateofTransaction)
                    hoursSet = timeSet.getHours();
                    minSet = timeSet.getMinutes();
                    secSet = timeSet.getSeconds();
                    var times = hoursSet + ":" + minSet + ":" + secSet;
                    labels.push(times);
                    colors.push('rgba(212,109,21, 0.7)');
                    data.push(tradeHistory[i].price.toFixed(2));
                    quantity.push(tradeHistory[i].quantity.toFixed(2));
                    trElem = document.createElement("tr");
                    trElem.className = "trade-row";
                    if (tradeHistory[i].status === 'Sell') {
                        trElem.style.color = "red";
                    }
                    else {
                        trElem.style.color = "green";
                    }
                    tdElem = document.createElement("td");
                    tdElem.innerHTML = tradeHistory[i].quantity;
                    tdSecElem = document.createElement("td");
                    tdSecElem.innerHTML = tradeHistory[i].price;
                    tdThirdElem = document.createElement("td");
                    var timeSet = new Date(tradeHistory[i].dateofTransaction)
                    hoursSet = timeSet.getHours();
                    minSet = timeSet.getMinutes();
                    secSet = timeSet.getSeconds();
                    tdThirdElem.innerHTML = hoursSet + ':' + minSet + ':' + secSet;
                    trElem.appendChild(tdElem);
                    trElem.appendChild(tdSecElem);
                    trElem.appendChild(tdThirdElem);
                    parent.appendChild(trElem);
                }
                //Chart area
                getChartLine(labels, data);
                getChartBar(labels, colors, quantity);
            }
        }

        function dropClientsItems(clientOrders) {
            var parent = document.getElementById('dropMenuId');
            parent.innerHTML = '';
            for (var i = 0; i < clientOrders.length; i++) {
                var liCreate = document.createElement('li');
                liCreate.setAttribute('onclick', 'setProductId(this)');
                liCreate.setAttribute('data-value', clientOrders[i].productId);
                liCreate.setAttribute('data-currentPrice', clientOrders[i].price.toFixed(2));
                liCreate.setAttribute('data-shortName', clientOrders[i].shortName);
                var spanCreate = document.createElement('span');
                spanCreate.innerHTML = clientOrders[i].price.toFixed(2);
                spanCreate.className = "select-product-price";
                var aCreate = document.createElement('a');
                aCreate.classList.add('dropdown-link');
                liCreate.appendChild(aCreate);
                liCreate.appendChild(spanCreate);
                aCreate.innerHTML = clientOrders[i].shortName;
                parent.appendChild(liCreate);
                 var label = document.createElement('span');
                label.style.cssText = "display:none";
                //label.attributes.display('none');
                label.innerHTML = clientOrders[i].productId;
                parent.appendChild(label);
            }
        }

        function setProductId(elem) {
            currentProductId = elem.getAttribute('data-value');
            connection.invoke('SelectedCoin', currentProductId);
            currentCoinShortName = elem.getAttribute('data-shortname');
        }

        function ConvertToSelectedCoin(elem) {
            if (document.getElementById('enterAmmountIdCoin').innerHTML === 'EUR') {
                var TotalInSelectedCoin = document.getElementById('totalCoinSelectedId');
                TotalInSelectedCoin.innerHTML = (elem.value / currentCoinPrice).toFixed(2);
            }
            else {
                var TotalInSelectedCoin = document.getElementById('totalCoinSelectedId');
                TotalInSelectedCoin.innerHTML = (elem.value * currentCoinPrice).toFixed(2);
            }
        }

        function getChartLine(labels,data) {
            var ctx = document.getElementById("firstChart").getContext('2d');
            var myChart = new Chart(ctx, {
                type: 'line',
                data: {
                    labels: labels.reverse(),
                    datasets: [{
                        label: 'Coin price',
                        data: data.reverse(),
                        borderWidth: 2,
                        backgroundColor: ['rgba(212,109,21, 0.7)'],
                        borderColor: ['rgba(212,109,21,1)'],
                    }]
                },
                options: {
                    legend: {
                        labels: {
                            fontColor: "rgba(212,109,21, 1)",
                            fontSize: 18
                        }
                    },
                    scales: {
                        yAxes: [{
                            ticks: {
                                fontColor: "rgba(212,109,21, 1)",
                                fontSize: 18,
                                stacked: true
                            }
                        }],
                        xAxes: [{
                            ticks: {
                                fontColor: "rgba(212,109,21, 1)",
                                fontSize: 14,
                                stepSize: 1,
                                stacked: true
                            }
                        }]
                    }
                }
            });
        }

        function getChartBar(labels,colors,quantity) {

            var ctxx = document.getElementById("secondChart").getContext('2d');
            var stackedBar = new Chart(ctxx, {
                type: 'bar',
                data: {
                    labels: labels.reverse(),
                    datasets: [{
                        label: 'Coin quantity',
                        data: quantity.reverse(),
                        borderWidth: 2,
                        backgroundColor: colors,
                    }]
                },
                options: {
                    legend: {
                        labels: {
                            fontColor: "rgba(212,109,21, 1)",
                            fontSize: 18
                        }
                    },

                    scales: {
                        yAxes: [{
                            ticks: {
                                fontColor: "rgba(212,109,21, 1)",
                                fontSize: 18,
                                stacked: true
                            }
                        }],
                        xAxes: [{
                            ticks: {
                                fontColor: "rgba(212,109,21, 1)",
                                fontSize: 14,
                                stepSize: 1,
                                stacked: true
                            }
                        }]
                    }
                }
            });

        }

        function setBuy() {
            let temp = currentCoinShortName;
            document.getElementById('placeOrderId').innerHTML = 'Place Buy Order';
            document.getElementById('placeOrderId').style.backgroundColor = '#5cb85c';
            document.getElementById('enterAmmountId').value = '';
            document.getElementById('enterAmmountIdCoin').innerHTML = 'EUR';
            document.getElementById('selectedCoinId').innerHTML = temp;
        }

        function setSell() {
            let temp = currentCoinShortName;
            document.getElementById('placeOrderId').innerHTML = 'Place Sell Order';
            document.getElementById('placeOrderId').style.backgroundColor = '#c9302c';
            document.getElementById('enterAmmountId').value = '';
            document.getElementById('enterAmmountIdCoin').innerHTML = temp;
            document.getElementById('selectedCoinId').innerHTML = 'EUR';
        }

        function setBid() {
            document.getElementById('placeAskBidId').style.backgroundColor = '#5cb85c';
            document.getElementById('placeAskBidId').innerHTML = 'Place Bid';
            document.getElementById('enterAmmountAskOfferId').value = '';
            document.getElementById('enterLimitPriceId').value = '';
        }

        function setAsk() {
            document.getElementById('placeAskBidId').style.backgroundColor = '#c9302c';
            document.getElementById('placeAskBidId').innerHTML = 'Place Ask';
            document.getElementById('enterAmmountAskOfferId').value = '';
            document.getElementById('enterLimitPriceId').value = '';
        }

        function placeBuyOrder() {
            //prepei na parei timi apo ta Bids
            let productId = currentProductId;
            let check = document.getElementById('placeOrderId').innerHTML;
            if (check === 'Place Buy Order') {
                let euroSpend = document.getElementById('enterAmmountId').value;
                connection.invoke('InstantBuy', productId, euroSpend);
                document.getElementById('enterAmmountId').value = "";
                document.getElementById('totalCoinSelectedId').innerHTML = "";
            } else {
                let coinSell = document.getElementById('enterAmmountId').value;
                connection.invoke('InstantSell', productId, coinSell);
                document.getElementById('enterAmmountId').value = "";
                document.getElementById('totalCoinSelectedId').innerHTML = "";
            }
        }

        function placeAskBidOrder() {
            let check = document.getElementById('placeAskBidId').innerHTML;
            if (check === 'Place Bid') {
                //The seller sets his price at $30. That’s his ask price.
                //Place Bid...You are willing to pay $20 for the coin.That your bid price
                let bidAmount = document.getElementById('enterAmmountAskOfferId').value;
                let limitPrice = document.getElementById('enterLimitPriceId').value;
                document.getElementById('enterAmmountAskOfferId').value = '';
                document.getElementById('enterLimitPriceId').value = '';
                connection.invoke('PlaceBid', currentProductId, bidAmount, limitPrice);
            }
            else {
                let askAmount = document.getElementById('enterAmmountAskOfferId').value;
                let limitPrice = document.getElementById('enterLimitPriceId').value;
                document.getElementById('enterAmmountAskOfferId').value = '';
                document.getElementById('enterLimitPriceId').value = '';
                connection.invoke('PlaceAsk', currentProductId, askAmount, limitPrice);
            }
        }

        //Start signalR connection
        connection.start().then(function () {
            $('.status-glyph').removeClass('glyphicon-remove-circle').addClass('glyphicon-ok-circle');
            $('.status-glyph').text(" Status OK");
            $('.status-glyph').css('color', 'lightgreen');
            console.log("Started....");
        })
            .catch(function (err) {
                console.log("Error");
                $('.status-glyph').text("Error");
            })
    </script>
</body>
</html>
